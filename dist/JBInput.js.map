{"version":3,"file":"JBInput.js","sources":["../lib/JBInput.js"],"sourcesContent":["import HTML from './JBInput.html';\r\nimport CSS from './JBInput.scss';\r\nclass JBInputWebComponent extends HTMLElement {\r\n    get value() {\r\n        return this._value\r\n    }\r\n    set value(value) {\r\n        this._value = value;\r\n        this._shadowRoot.querySelector('.input-box input').setAttribute('value', value);\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.initWebComponent();\r\n        this.initProp();\r\n    }\r\n    initWebComponent() {\r\n        this._shadowRoot = this.attachShadow({\r\n            mode: 'open'\r\n        });\r\n        this._html = `<style>${CSS}</style>` + '\\n' + HTML\r\n        this._element = document.createElement('template');\r\n        this._element.innerHTML = this._html;\r\n        this._shadowRoot.appendChild(this._element.content.cloneNode(true));\r\n        this.registerEventListener();\r\n    }\r\n    registerEventListener() {\r\n        this._shadowRoot.querySelector('.input-box input').addEventListener('change', this.onInputChange.bind(this));\r\n        this._shadowRoot.querySelector('.input-box input').addEventListener('keypress', this.onInputKeyPress.bind(this));\r\n        this._shadowRoot.querySelector('.input-box input').addEventListener('keyup', this.onInputKeyup.bind(this))\r\n    }\r\n    initProp() {\r\n        this.validationList = [];\r\n        this.value = this.getAttribute('value') || '';\r\n        this.validation = {\r\n            isValid: null,\r\n            message: null\r\n        }\r\n    }\r\n    static get observedAttributes() {\r\n        return ['label', 'type', 'message', 'value'];\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        // do something when an attribute has changed\r\n        this.onAttributeChange(name, newValue);\r\n    }\r\n    onAttributeChange(name, value) {\r\n        switch (name) {\r\n            case 'label':\r\n                this._shadowRoot.querySelector('label .label-value').innerHTML = value;\r\n                break;\r\n            case 'type':\r\n                this._shadowRoot.querySelector('.input-box input').setAttribute('type', value);\r\n                if (value == \"password\") {\r\n                    this.initPassword();\r\n                }\r\n                break;\r\n            case 'message':\r\n                this._shadowRoot.querySelector('.message-box').innerHTML = value;\r\n                break;\r\n            case 'value':\r\n                this.value = value;\r\n                break;\r\n        }\r\n\r\n    }\r\n    initPassword() {\r\n        this._shadowRoot.querySelector('.input-box').classList.add('type-password');\r\n        this.isPasswordvisible = false;\r\n        this._shadowRoot.querySelector('.password-trigger').addEventListener('click', this.onPasswordTriggerClicked.bind(this))\r\n    }\r\n    onPasswordTriggerClicked() {\r\n        this.isPasswordvisible = !this.isPasswordvisible;\r\n        const textField = this._shadowRoot.querySelector('.input-box input');\r\n        if (this.isPasswordvisible) {\r\n            this._shadowRoot.querySelector('.password-trigger svg').classList.add('password-visible');\r\n            textField.setAttribute('type', 'text')\r\n        } else {\r\n            this._shadowRoot.querySelector('.password-trigger svg').classList.remove('password-visible');\r\n            textField.setAttribute('type', 'password')\r\n        }\r\n    }\r\n    onInputKeyPress() {\r\n        //TODO: raise keypress event\r\n    }\r\n    onInputKeyup(e) {\r\n        const inputText = e.target.value;\r\n        this.triggerInputValidation(false);\r\n        //here is the rare  time we update _value directly becuase we want trigger event that may read value directly from dom\r\n        this._value = inputText;\r\n    }\r\n    onInputChange(e) {\r\n        const inputText = e.target.value;\r\n        this.triggerInputValidation(true);\r\n        //here is the rare  time we update _value directly becuase we want trigger event that may read value directly from dom\r\n        this._value = inputText;\r\n        const event = new Event('change');\r\n        this.dispatchEvent(event);\r\n    }\r\n    triggerInputValidation(showError = true) {\r\n        // this method is for use out of component  for example if user click on submit button and developer want to check if all fields are valid\r\n        //takeAction determine if we want to show user error in web component difualtManner or developer will handle it by himself\r\n        const inputText = this._shadowRoot.querySelector('.input-box input').value;\r\n        const validationResult = {\r\n            validationList: [],\r\n            isAllValid: true\r\n        }\r\n        this.validationList.forEach((validation) => {\r\n            const res = this.checkValidation(inputText, validation);\r\n            validationResult.validationList.push(res);\r\n            if (!res.isValid) {\r\n                validationResult.isAllValid = false;\r\n            }\r\n        });\r\n\r\n        if (showError == true && !validationResult.isAllValid) {\r\n            const firstFault = validationResult.validationList.find(x => !x.isValid);\r\n            this.showValidationError(firstFault.message);\r\n        } else if(validationResult.isAllValid) {\r\n            this.clearValidationError();\r\n        }\r\n        return validationResult;\r\n    }\r\n    checkValidation(text, validation) {\r\n        var testRes = validation.validator.test(text);\r\n        validation.validator.lastIndex = 0;\r\n        if (!testRes) {\r\n            return {\r\n                isValid: false,\r\n                message: validation.message,\r\n                validation: validation\r\n            }\r\n        }\r\n        return {\r\n            isValid: true,\r\n            message: '',\r\n            validation: validation\r\n        };\r\n    }\r\n    showValidationError(error) {\r\n        this.validation = {\r\n            isValid: false,\r\n            message: error\r\n        }\r\n        this._shadowRoot.querySelector('.message-box').innerHTML = error;\r\n        this._shadowRoot.querySelector('.message-box').classList.add('error')\r\n    }\r\n    clearValidationError() {\r\n        this.validation = {\r\n            isValid: true,\r\n            message: null\r\n        }\r\n        const text = this.getAttribute('message') || '';\r\n        this._shadowRoot.querySelector('.message-box').innerHTML = text;\r\n        this._shadowRoot.querySelector('.message-box').classList.remove('error')\r\n    }\r\n}\r\nwindow.customElements.define('jb-input', JBInputWebComponent);"],"names":["CSS"],"mappings":"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"}